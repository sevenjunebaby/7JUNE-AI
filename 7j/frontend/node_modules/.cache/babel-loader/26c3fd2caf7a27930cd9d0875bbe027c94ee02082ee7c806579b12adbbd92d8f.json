{"ast":null,"code":"var _jsxFileName = \"/home/wissal/Desktop/web/AI-7J/AI-7j/7j/frontend/src/components/ChatApp.jsx\",\n  _s = $RefreshSig$();\n// src/components/ChatApp.jsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Import axios for HTTP requests\nimport \"./ChatApp.css\"; // Import your CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatApp = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n\n    // Add user's message to the chat\n    const userMessage = {\n      text: userInput,\n      sender: \"user\"\n    };\n    setMessages([...messages, userMessage]);\n    try {\n      // Send request to Flask API\n      const response = await axios.post(\"http://localhost:5000/chat\", {\n        question: userInput // This matches Flask's expected key\n      });\n\n      // Add bot's reply\n      const botMessage = {\n        text: response.data.reply,\n        sender: \"bot\"\n      };\n\n      // Add bot's reply after 1 second delay\n      setTimeout(() => {\n        setMessages(prevMessages => [...prevMessages, botMessage]);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error connecting to the Flask backend:\", error);\n      setMessages(prevMessages => [...prevMessages, {\n        text: \"Error communicating with the server.\",\n        sender: \"bot\"\n      }]);\n    }\n    setUserInput(\"\"); // Clear input field after message is sent\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"chat-box\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: msg.sender === \"user\" ? \"user-message\" : \"bot-message\",\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      id: \"user-input\",\n      placeholder: \"Ask something...\",\n      value: userInput,\n      onChange: e => setUserInput(e.target.value),\n      onKeyDown: e => e.key === \"Enter\" && sendMessage()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendMessage,\n      children: \"Send\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatApp, \"1zGRC38DTEORNFfajD4oL7sdkj8=\");\n_c = ChatApp;\nexport default ChatApp;\nvar _c;\n$RefreshReg$(_c, \"ChatApp\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","ChatApp","_s","messages","setMessages","userInput","setUserInput","sendMessage","trim","userMessage","text","sender","response","post","question","botMessage","data","reply","setTimeout","prevMessages","error","console","className","children","id","map","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onKeyDown","key","onClick","_c","$RefreshReg$"],"sources":["/home/wissal/Desktop/web/AI-7J/AI-7j/7j/frontend/src/components/ChatApp.jsx"],"sourcesContent":["// src/components/ChatApp.jsx\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // Import axios for HTTP requests\nimport \"./ChatApp.css\"; // Import your CSS file\n\nconst ChatApp = () => {\n  const [messages, setMessages] = useState([]);\n  const [userInput, setUserInput] = useState(\"\");\n\n  const sendMessage = async () => {\n    if (!userInput.trim()) return;\n\n    // Add user's message to the chat\n    const userMessage = { text: userInput, sender: \"user\" };\n    setMessages([...messages, userMessage]);\n\n    try {\n      // Send request to Flask API\n      const response = await axios.post(\"http://localhost:5000/chat\", {\n        question: userInput, // This matches Flask's expected key\n      });\n      \n\n      // Add bot's reply\n      const botMessage = { text: response.data.reply, sender: \"bot\" };\n\n      // Add bot's reply after 1 second delay\n      setTimeout(() => {\n        setMessages((prevMessages) => [...prevMessages, botMessage]);\n      }, 1000);\n    } catch (error) {\n      console.error(\"Error connecting to the Flask backend:\", error);\n      setMessages((prevMessages) => [\n        ...prevMessages,\n        { text: \"Error communicating with the server.\", sender: \"bot\" },\n      ]);\n    }\n\n    setUserInput(\"\"); // Clear input field after message is sent\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <div id=\"chat-box\">\n        {messages.map((msg, index) => (\n          <div\n            key={index}\n            className={msg.sender === \"user\" ? \"user-message\" : \"bot-message\"}\n          >\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <input\n        type=\"text\"\n        id=\"user-input\"\n        placeholder=\"Ask something...\"\n        value={userInput}\n        onChange={(e) => setUserInput(e.target.value)}\n        onKeyDown={(e) => e.key === \"Enter\" && sendMessage()}\n        \n      />\n      <br />\n      <br />\n      <button onClick={sendMessage}>Send</button>\n    </div>\n  );\n};\n\nexport default ChatApp;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}